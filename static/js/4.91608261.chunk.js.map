{"version":3,"sources":["hooks/useMount.js","constants/index.js","fetch/makeFetch.js","components/table/helpers/getColumnsNames.js","components/table/Header.jsx","hooks/useTextSlice.js","components/table/ParagraphSliceable.jsx","hooks/useOutSideClick.js","components/table/InputEdit.jsx","components/table/Row.jsx","components/table/Body.jsx","components/Pagination/Pagination1.jsx","components/table/Footer.jsx","components/table/Table.jsx"],"names":["useMount","effect","useEffect","COLUMS","KEY_CODE","makeFetch","url","a","fetch","res","json","data","console","error","getColumnsNames","includeItems","excludeItems","columnsSet","Set","map","item","Object","keys","forEach","val","v","add","delete","Promise","resolve","Array","from","Header","columnsNames","className","i","style","width","length","useTextSlice","str","leng","isFullText","useState","isFull","setIsFull","allStr","slicedStr","slice","toggleStr","useCallback","text","onClick","ParagraphSliceable","string","stringSlice","useOutSideClick","ref","useRef","e","current","contains","target","document","addEventListener","removeEventListener","InputEdit","id","title","onKeyPressEditTitle","setIsEdit","editTitle","isOutSideClick","which","keycode","useOutsideClick","autoFocus","defaultValue","onKeyPress","type","Row","userId","body","deleteItem","isEdit","includes","icon","faEdit","faTrashAlt","Body","visibleData","props","rest","Pagination","dataLength","currentPage","onPageChange","pageCount","Math","ceil","notFull","isFromStart","pageButtonsCount","isFromEnd","getStartPage","index","pagePlace","floor","pages","fill","_","page","borderColor","color","Footer","Table","errorMessage","setData","setColumnsNames","visibility","setVisibility","setError","startRowIndex","setStartRowIndex","setCurrentPage","filter","setTimeout","isArray","colNames","Error","columnCount","size","itemId","prevData","value","Loader"],"mappings":"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","file":"static/js/4.91608261.chunk.js","sourcesContent":["/*eslint-disable*/\r\nimport { useEffect } from 'react';\r\n\r\nfunction useMount(effect) {\r\n  useEffect(effect, []);\r\n}\r\n\r\nexport default useMount;\r\n","export const URL = 'https://jsonplaceholder.typicode.com/posts';\nexport const URL_WRONG = 'https://jsonplaceholder.typicode.com/postss';\nexport const COLUMS = {\n  userId: 'userId',\n  id: 'id',\n  title: 'title',\n  body: 'body',\n  delete: 'delete',\n};\nexport const PAGE_ROW_COUNT = 5;\nexport const SLICE_LENG = 40;\nexport const KEY_CODE = {\n  enter: 13,\n};\n","const makeFetch = async (url) => {\n  try {\n    const res = await fetch(url);\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nexport default makeFetch;\n","function getColumnsNames(data, includeItems = [], excludeItems = []) {\r\n  const columnsSet = new Set();\r\n  data\r\n    .map((item) => Object.keys(item))\r\n    .forEach((val) => val.forEach((v) => columnsSet.add(v)));\r\n  excludeItems.forEach((v) => columnsSet.delete(v));\r\n  includeItems.forEach((v) => columnsSet.add(v));\r\n  return Promise.resolve(Array.from(columnsSet));\r\n}\r\n\r\nexport default getColumnsNames;\r\n\r\n// generic version\r\n\r\n// export const getColumns = function (data, processor, includeItems=[], excludeItems=[]) {\r\n//   const columnsSet = new Set()\r\n//   data.map(processor).forEach(v => {\r\n//     console.log(v)\r\n//     if (includeItems.includes(v) && !excludeItems.includes(v)) {\r\n//       columnsSet.add(v)\r\n//     }\r\n//   })\r\n//   return Promise.resolve(Array.from(columnsSet))\r\n// }\r\n","function Header({ columnsNames }) {\n  // console.log('render Header');\n\n  return (\n    <div className=\"thead\">\n      <div className=\"tr\">\n        {columnsNames.map((v, i) => (\n          <div\n            className=\"th\"\n            key={i}\n            style={{ width: `calc(100% / ${columnsNames.length})` }}\n          >\n            {v}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import { useCallback, useState } from 'react';\r\n\r\nfunction useTextSlice(str = '', leng = 50, isFullText = false) {\r\n    const [isFull, setIsFull] = useState(isFullText)\r\n    const allStr = str\r\n\r\n    const slicedStr = str.slice(0, leng)\r\n\r\n    const toggleStr = useCallback(() => setIsFull(!isFull),[\r\n        isFull\r\n    ]) // question there is no difference without useCallback \r\n\r\n    return {\r\n        text: isFull ? allStr : slicedStr,\r\n        isFull, \r\n        onClick: toggleStr\r\n    }\r\n}\r\n\r\nexport default useTextSlice","import useTextSlice from '../../hooks/useTextSlice';\n\nfunction ParagraphSliceable({ string, leng }) {\n  const stringSlice = useTextSlice(string, leng);\n\n  // console.log('render ParagraphSliceable');\n\n  return (\n    <p>\n      {stringSlice.text}\n      {string.length > leng && (\n        <span onClick={stringSlice.onClick} className=\"moreless\">\n          {stringSlice.isFull ? 'Read less' : 'Read more'}\n        </span>\n      )}\n    </p>\n  );\n}\n\nexport default ParagraphSliceable;\n","import { useEffect, useRef } from 'react';\r\n\r\nconst useOutSideClick = (effect) => {\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const onClick = (e) => {\r\n      if (!ref.current.contains(e.target)) {\r\n        effect(e, true);\r\n      }\r\n    };\r\n    document.addEventListener('click', onClick);\r\n    return () => document.removeEventListener('click', onClick);\r\n  }, [effect]);\r\n  return ref;\r\n};\r\n\r\nexport default useOutSideClick;\r\n","import { KEY_CODE } from '../../constants';\nimport useOutsideClick from '../../hooks/useOutSideClick';\n\nconst InputEdit = ({ id, title, onKeyPressEditTitle, setIsEdit }) => {\n  const editTitle = (e, isOutSideClick) => {\n    // console.log(e, param)\n    if (isOutSideClick) {\n      setIsEdit(false);\n      return;\n    }\n    if (e.which === KEY_CODE.enter || e.keycode === KEY_CODE.enter) {\n      onKeyPressEditTitle(e, id);\n      setIsEdit(false);\n    }\n  };\n\n  const ref = useOutsideClick(editTitle);\n\n  // console.log('render InputEdit');\n\n  return (\n    <input\n      autoFocus\n      defaultValue={title}\n      onKeyPress={editTitle}\n      ref={ref}\n      type=\"textarea\"\n    />\n  );\n};\n\nexport default InputEdit;\n","import { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { SLICE_LENG } from '../../constants';\nimport ParagraphSliceable from './ParagraphSliceable';\nimport InputEdit from './InputEdit';\n\nfunction Row({\n  userId,\n  id,\n  title,\n  body,\n  columnsNames,\n  deleteItem,\n  onKeyPressEditTitle,\n}) {\n  const style = { width: `calc(100% / ${columnsNames.length})` };\n\n  const [isEdit, setIsEdit] = useState(false);\n\n  const delItem = () => deleteItem(id);\n\n  const toggleTitle = () => setIsEdit(true);\n\n  // console.log('render Row');\n\n  return (\n    <div className=\"tr\">\n      {columnsNames.includes('userId') && (\n        <div className=\"td\" style={{ ...style }}>\n          {userId}\n        </div>\n      )}\n      {columnsNames.includes('id') && (\n        <div className=\"td\" style={{ ...style }}>\n          {id}\n        </div>\n      )}\n      {columnsNames.includes('title') && (\n        <div className=\"td title\" style={{ ...style }}>\n          {!isEdit ? (\n            <>\n              <ParagraphSliceable string={title} leng={SLICE_LENG} />\n              <FontAwesomeIcon icon={faEdit} onClick={toggleTitle} />\n            </>\n          ) : (\n            <InputEdit\n              id={id}\n              title={title}\n              onKeyPressEditTitle={onKeyPressEditTitle}\n              setIsEdit={setIsEdit}\n            />\n          )}\n        </div>\n      )}\n      {columnsNames.includes('body') && (\n        <div className=\"td body\" style={{ ...style }}>\n          <ParagraphSliceable string={body} leng={SLICE_LENG} />\n        </div>\n      )}\n      {columnsNames.includes('delete') && (\n        <div className=\"td\" style={{ ...style }}>\n          <FontAwesomeIcon icon={faTrashAlt} onClick={delItem} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Row;\n","import Row from './Row';\n\nfunction Body({ visibleData, ...props }) {\n  // console.log('render Body');\n\n  return (\n    <div className=\"tbody\">\n      {visibleData.map(({ id, ...rest }) => {\n        // console.log('loop iteration');\n        return <Row key={id} id={id} {...rest} {...props} />;\n      })}\n    </div>\n  );\n}\n\nexport default Body;\n","import { PAGE_ROW_COUNT } from '../../constants';\n\nfunction Pagination({ dataLength, currentPage, onPageChange }) {\n  const pageButtonsCount = 5;\n  const pageCount = Math.ceil(dataLength / PAGE_ROW_COUNT);\n  const notFull = pageCount < pageButtonsCount;\n  const isFromStart = currentPage <= Math.ceil(pageButtonsCount / 2);\n  const isFromEnd = currentPage >= Math.ceil(pageCount - pageButtonsCount / 2);\n\n  const getStartPage = (index, pagePlace) => {\n    if (pagePlace === 'notFull' || pagePlace === 'isFromStart') {\n      return index + 1;\n    }\n    if (pagePlace === 'isFromEnd') {\n      return index + 1 + pageCount - pageButtonsCount;\n    }\n    return index + currentPage - Math.floor(pageButtonsCount / 2);\n  };\n\n  const pages = (() => {\n    if (notFull) {\n      return Array(pageCount)\n        .fill(null)\n        .map((_, index) => getStartPage(index, 'notFull'));\n    }\n    if (isFromStart) {\n      return Array(pageButtonsCount)\n        .fill(null)\n        .map((_, index) => getStartPage(index, 'isFromStart'));\n    }\n    if (isFromEnd) {\n      return Array(pageButtonsCount)\n        .fill(null)\n        .map((_, index) => getStartPage(index, 'isFromEnd'));\n    }\n    return Array(pageButtonsCount)\n      .fill(null)\n      .map((_, index) => getStartPage(index));\n  })();\n\n  // console.log('render Pagination');\n\n  return (\n    <div className=\"pagination\">\n      {pages.map((page, i) => (\n        <button\n          key={i}\n          onClick={() => onPageChange(page)}\n          style={\n            page === currentPage\n              ? { borderColor: 'tomato', color: 'tomato' }\n              : { borderColor: 'silver', color: 'initial' }\n          }\n        >\n          {page}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default Pagination;\n","import Pagination from '../Pagination/Pagination1';\n\nfunction Footer({ columnsNames, currentPage, dataLength, onPageChange }) {\n  // console.log('render Footer');\n\n  return (\n    <div className=\"tfooter\">\n      <div className=\"tr\">\n        {columnsNames.map((v, i) => (\n          <div\n            className=\"th\"\n            key={i}\n            style={{ width: `calc(100% / ${columnsNames.length})` }}\n          >\n            {v}\n          </div>\n        ))}\n      </div>\n      <Pagination\n        currentPage={currentPage}\n        dataLength={dataLength}\n        onPageChange={onPageChange}\n      />\n    </div>\n  );\n}\n\nexport default Footer;\n","import { useState } from 'react';\nimport useMount from '../../hooks/useMount';\nimport { URL, COLUMS, PAGE_ROW_COUNT } from '../../constants';\nimport makeFetch from '../../fetch/makeFetch';\nimport Loader from '../Loader';\nimport getColumnsNames from './helpers/getColumnsNames';\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nimport './table.scss';\n\n// const Body = lazy(() => import('./Body'));\n\nfunction Table({ errorMessage }) {\n  const [data, setData] = useState([]);\n  const [columnsNames, setColumnsNames] = useState([]);\n  const [visibility, setVisibility] = useState(false);\n  const [error, setError] = useState(false);\n\n  const [startRowIndex, setStartRowIndex] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const dataLength = data.length;\n  const visibleData = data.filter(\n    (_, i) => i >= startRowIndex && i < startRowIndex + PAGE_ROW_COUNT\n  );\n\n  useMount(() => {\n    setTimeout(() => {\n      // for Loader view\n      (async () => {\n        const res = await makeFetch(URL);\n        if (!Array.isArray(res)) {\n          setError(true);\n          return;\n        }\n        const colNames = await getColumnsNames(\n          res,\n          [COLUMS.delete],\n          [COLUMS.userId]\n        );\n        setData(res);\n        setColumnsNames(colNames);\n        setVisibility(true);\n      })();\n    }, 0);\n  });\n\n  // useUpdate(() => {\n  //   console.log('data', data)\n  //   console.log('columns set', columnsNames)\n  // }, [data,columnsNames,])\n\n  const deleteItem = (itemId) => {\n    setData((prevData) => prevData.filter(({ id }) => id !== itemId));\n    setCurrentPage((page) => {\n      if (visibleData.length - 1 === 0) {\n        setStartRowIndex((page - 1) * PAGE_ROW_COUNT - PAGE_ROW_COUNT);\n        return page - 1;\n      }\n      return page;\n    });\n  };\n\n  const onKeyPressEditTitle = (e, itemId) => {\n    setData((prevData) =>\n      prevData.map((val) =>\n        val.id === itemId ? { ...val, title: e.target.value } : { ...val }\n      )\n    );\n  };\n\n  const onPageChange = (page) => {\n    setStartRowIndex(page * PAGE_ROW_COUNT - PAGE_ROW_COUNT);\n    setCurrentPage(page);\n  };\n\n  if (error) throw new Error(errorMessage);\n\n  // console.log('render table');\n\n  return visibility ? (\n    <div className=\"table\">\n      <Header columnsNames={columnsNames} />\n      <Body\n        visibleData={visibleData}\n        columnsNames={columnsNames}\n        columnCount={columnsNames.size}\n        deleteItem={deleteItem}\n        onKeyPressEditTitle={onKeyPressEditTitle}\n      />\n      <Footer\n        columnsNames={columnsNames}\n        dataLength={dataLength}\n        onPageChange={onPageChange}\n        currentPage={currentPage}\n      />\n    </div>\n  ) : (\n    <Loader />\n  );\n}\n\nexport default Table;\n"],"sourceRoot":""}